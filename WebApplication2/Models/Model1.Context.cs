//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NORTHWNDEntities : DbContext
    {
        public NORTHWNDEntities()
            : base("name=NORTHWNDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CustomerDemographic> CustomerDemographics { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Order_Detail> Order_Details { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<Shipper> Shippers { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Territory> Territories { get; set; }
        public virtual DbSet<TableQuery2> TableQuery2 { get; set; }
        public virtual DbSet<TableQuery3> TableQuery3 { get; set; }
        public virtual DbSet<TableQuery4> TableQuery4 { get; set; }
        public virtual DbSet<TableQuery1> TableQuery1 { get; set; }
        public virtual DbSet<TableQuery5> TableQuery5 { get; set; }
    
        public virtual ObjectResult<TableQuery2> SearchQuery2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TableQuery2>("SearchQuery2");
        }
    
        public virtual ObjectResult<TableQuery2> SearchQuery2(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TableQuery2>("SearchQuery2", mergeOption);
        }
    
        public virtual ObjectResult<TableQuery3> SearchQuery3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TableQuery3>("SearchQuery3");
        }
    
        public virtual ObjectResult<TableQuery3> SearchQuery3(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TableQuery3>("SearchQuery3", mergeOption);
        }
    
        public virtual ObjectResult<TableQuery4> SearchQuery4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TableQuery4>("SearchQuery4");
        }
    
        public virtual ObjectResult<TableQuery4> SearchQuery4(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TableQuery4>("SearchQuery4", mergeOption);
        }
    
        public virtual ObjectResult<TableQuery5> SearchQuery5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TableQuery5>("SearchQuery5");
        }
    
        public virtual ObjectResult<TableQuery5> SearchQuery5(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TableQuery5>("SearchQuery5", mergeOption);
        }
    
        public virtual ObjectResult<TableQuery1> SearchQuery1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TableQuery1>("SearchQuery1");
        }
    
        public virtual ObjectResult<TableQuery1> SearchQuery1(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TableQuery1>("SearchQuery1", mergeOption);
        }
    }
}
